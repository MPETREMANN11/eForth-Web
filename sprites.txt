\ *********************************************************************
\ SPRITES for ESP32forth & uEforth
\    Filename:      sprites.txt
\    Date:          15 jan 2023
\    Updated:       15 jan 2023
\    File Version:  1.1
\    MCU:           ESP32-WROOM-32 / uEforth Windows
\    Forth:         ESP32forth all versions 7...++ / uEforth 
\    Copyright:     Marc PETREMANN
\    Author:        Marc PETREMANN
\    GNU General Public License
\ *********************************************************************


\ tool for displaying characters
: tableChars ( -- )
    base @ >r  hex
    128 32 do
       16 0 do
            j i + dup . space emit space space
       loop
       cr
    16 +loop
    256 160 do
       16 0 do
            j i + dup . space emit space space
       loop
       cr
    16 +loop
    cr
    r> base !
  ;
tableChars    \ display characters table

\ define cARRAY as bi dimensionnal array
structures 
struct cARRAY 
    i8  field >width 
    i8  field >height 
    i8  field >content 
         
create myVscreen    \ define a screen 8x32 bytes 
    32 c,           \ compile width 
    08 c,           \ compile height 
    myVscreen >width  c@ 
    myVscreen >height c@ * allot 

\ SPRITES definition word
: sprite: ( width height -- ) 
    create 
        swap c, c,  \ compile width and height 
    does> 
  ; 
2 1 sprite: blackChars 
    $db c, $db c,  
2 1 sprite: greyChars 
    $b2 c, $b2 c,  
blackChars >content 2 type   \ display content of sprite blackChars 

\ define 5 x 7 sprite:
5 7 sprite: char3
    $20 c,  $db c,  $db c,  $db c,  $20 c, 
    $db c,  $20 c,  $20 c,  $20 c,  $db c,
    $20 c,  $20 c,  $20 c,  $20 c,  $db c,
    $20 c,  $db c,  $db c,  $db c,  $20 c, 
    $20 c,  $20 c,  $20 c,  $20 c,  $db c,
    $db c,  $20 c,  $20 c,  $20 c,  $db c,
    $20 c,  $db c,  $db c,  $db c,  $20 c,

: .sprite { xpos ypos sprAddr -- }
    sprAddr >height c@ 0 do
        xpos ypos at-xy
        sprAddr >width c@ i *   \ calculate offset in sprite datas
        sprAddr >content +      \ calculate real address for line n in sprite datas
        sprAddr >width c@ type  \ display line
        1 +to ypos              \ increment y position
    loop
  ;

0 constant blackColor
1 constant redColor
4 constant blueColor
10 02 char3 .sprite
redColor fg        
16 02 char3 .sprite
blueColor fg
22 02 char3 .sprite 
blackColor fg    
cr cr


